---

apiVersion: flux.weave.works/v1beta1
kind: HelmRelease

metadata:
  name: varnish
  namespace: default
  annotations:
    flux.weave.works/automated: "false"
    flux.weave.works/tag.chart-image: "semver:~6"
  labels:
    app: varnish

spec:
  releaseName: varnish
  chart:
    repository: https://charts.stevenxie.me
    name: varnish
    version: 0.2.1
  values:
    config:
      data: |-
        vcl 4.0;

        # Backends:
        backend ingress {
          .host = "istio-ingressgateway.istio-system.svc.cluster.local";
          .port = "80";
        }

        sub vcl_recv {
          unset req.http.X-Body-Len;
          if (req.http.X-Destination) {
            set req.http.Host = req.http.X-Destination;
          }

          # Remove has_js and Cloudflare/Google Analytics __* cookies, and
          # normalize cookies.
          set req.http.Cookie = regsuball(req.http.Cookie,
            "(^|;\s*)(_[_a-z]+|has_js)=[^;]*", "");
          set req.http.Cookie = regsub(req.http.Cookie, "^;\s*", "");
          if (req.http.Cookie ~ "^ *$") {
            unset req.http.Cookie;
          }

          if (req.http.upgrade ~ "(?i)websocket") {
              return (pipe);
          }
          if (req.method != "GET" && req.method != "HEAD") {
            return (pass);
          }
          if (req.http.Authorization) {
            return (pass);
          }
          if (req.http.X-Force-Backend) {
            return (pass);
          }
        }

        sub vcl_pipe {
          if (req.http.upgrade) {
            set bereq.http.upgrade = req.http.upgrade;
            set bereq.http.connection = req.http.connection;
          }
        }

        sub vcl_backend_response {
          if (beresp.http.X-No-Grace) {
            set beresp.grace = 0s;
            unset beresp.http.X-No-Grace;
          }
        }

        sub vcl_deliver {
          unset resp.http.Via;
          return (deliver);
        }

    image:
      repository: cooptilleuls/varnish
      tag: 6.2.0-alpine

    resources:
      requests:
        cpu: 0
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 200Mi

    deployment:
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
