---

apiVersion: extensions/v1beta1
kind: DaemonSet

metadata:
  name: node-provisioner
  namespace: kube-system
  labels:
    app: node-provisioner

spec:
  selector:
    matchLabels:
      app: node-provisioner
  template:
    metadata:
      labels:
        app: node-provisioner
    spec:
      containers:
        - name: provisioner
          image: bash:5
          imagePullPolicy: Always
          args:
            - -c
            - |
              set -e # exit on failure

              # Create 'cilium-portmap' network plugin.
              cd "$CNI_CONF_DIR"
              if [ ! -s 00-cilium-portmap.conflist ]
              then cat <<EOF > 00-cilium-portmap.conflist
              {
                "name": "cilium-portmap",
                "plugins": [
                  { "type": "cilium-cni" },
                  {
                    "type": "portmap",
                    "capabilities": { "portMappings": true }
                  }
                ]
              }
              EOF
              fi
              echo "Successfully configured 'cilium-portmap' network plugin."

              # TODO: Remove when DaemonSets supports custom RestartPolicies
              # (i.e. restart only on failure, rather than the current default
              # setting 'Always').
              echo "Provisioning complete."
              trap : TERM INT; (while true; do sleep 1000; done) & wait
          env:
            - name: CNI_CONF_DIR
              value: /host/etc/cni/net.d
          volumeMounts:
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
          securityContext:
            privileged: true
      volumes:
        - name: etc-cni-netd
          hostPath:
            type: Directory
            path: /etc/cni/net.d
      priorityClassName: system-node-critical
      tolerations:
        - operator: Exists # tolerate all taints
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
